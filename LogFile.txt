Name: Vaghasiya Dhrumil Arvindbhai
Student Id# 200492148
Course Number: 20955
WebApplication File: http://www.webdev.cs.uregina.ca/~dvb664/Assignment%206/login.php

// Files from previous assignments
1. Login.php - This PHP page is for a polling website. It retrieves recent polls from a database, lets users log in, vote on polls, and redirects them to results. It uses HTML forms and PHP to manage interactions, errors, and database queries. The layout includes a navigation bar, poll list, and login form.
list of Login users are: 
        UserId | EmailAddress           | password  | UserName         | Avatar        |
    +--------+------------------------+-----------+------------------+---------------+
    |      1 | Naruto106@Hinata.com   | password1 | NarutoKun        | uploads/1.jpg |
    |      2 | ItachiUchiha@gmail.com | password1 | ItachiGod_Uchiha | uploads/2.jpg |
    |      3 | titan@gmail.com        | password1 | SasukeKun        | uploads/3.jpg |
    |      4 | HinataChan@gmail.com   | password1 | HinataChan       | uploads/4.jpg |
But this time this file has Api made by Ajax method that retreives data from data base in every 90seconds. If data any new poll is updated into database then it just updates login.php page without loading it, while maintaing top five polls.


2. signup.php - This PHP page is for user registration on a website. It validates user inputs for email, username, and password, checks for existing accounts, handles avatar uploads, and inserts user data into a database. The layout includes a form for entering registration details, including choosing an avatar image. If successful, users are redirected to the login page. If errors occur, they are displayed.


3. HomePage.php - Purpose: This PHP page displays a user's polls and handles voting. It checks if the user is logged in, retrieves their polls from the database, and allows them to vote on options. If a user votes, the database is updated and the page is redirected to show the results. The layout includes user details, poll questions, options, and voting buttons.

4. NewPoll.php - Purpose: This PHP page allows a logged-in user to create a new poll. It validates user inputs for question, options, and timing information. If the data is valid, it inserts the poll and associated options into the database. If there are any errors, it displays corresponding error messages. The page includes form fields for poll details, question, options, start and end times, and dates. It also provides a "Create Poll" button to submit the form.

5. YourVote.php - Purpose: This PHP page displays a list of polls for voting, fetched from the database. Users can select options and submit votes. It showcases user avatars and usernames based on sessions. If logged in, recent vote history is shown. The page offers navigation links and dynamically generates poll details, options, and voting forms. Generation and recent vote times are also displayed.
New Feature: By Ajax this page doesn't direct user to Result.php page when voted instead it shows result right on that porticular poll container. And disables vote button.

6. Results.php - Purpose: This PHP page displays the results of a poll based on the selected options. It retrieves poll details, user information, and vote statistics from the database. The page includes user avatars and usernames, the poll question, and the voting options along with graphical representations of the vote percentages. It also shows generation and recent vote times. The user can navigate through multiple poll results using the "Previous" and "Next" buttons.
Note: This page redirect user to YourVote page if he lands on page without Voting on mainpage of YourVote page.


JS:
1. eventRegisterYourVote.js: This file has event registration and ajax method of whole YourVote.php page. Which helps page to retrieve data from database and manipulate it on page.
2. eventRegisterLogin.js: This page has been updated to use setInterval function which uses function defined eventHandler.js (checkForNewPoll) in every 90seconds interval.
3. eventHandler.js: This file has new function named checkForNewPoll which uses Ajax method to retrive data from database about new poll and and manipulate it on login.php page.

Ajax php files:
1. ajax_login.php: A server side logic file which accepts request from client and processes according to received data. And then according to that provides data of updated poll on database and sends data in encoded json format.
2. ajax_pollvote.php: A server side logic file which accepts request from eventRegisterYourVote.js file and sends encoded json data about Obtanined vote on particular Poll.

Directory:
uploads:
    this directory handles uploaded Avatars of Users at the time of Signup from signup.php;